{%- assign idShip = 'mini_cart_' | append: section.id -%}

<div class="t4s-drawer__bottom">
  {% comment %} <div data-cart-discounts>
    {%- if cart.cart_level_discount_applications != blank -%}
      <ul class="t4s-cart_discounts">
        {%- for discount_application in cart.cart_level_discount_applications -%}
         <li class="t4s-order_cart_discounts">
            <svg viewBox="0 0 24 24" width="20"><use href="#icon-cart-tag"/></svg> 
            {{ discount_application.title }} (-{{ discount_application.total_allocated_amount | money }})
          </li> 
        {%- endfor -%}
      </ul>
    {%- endif -%}
  </div> {% endcomment %}

  {%- for block in section_blocks -%}
    {%- assign bk_stts = block.settings -%}
    {%- assign button_style = bk_stts.button_style -%}
    {%- case block.type -%}
      {%- when 'price' -%}
        <div class="t4s-cart-total t4s-row t4s-gx-5 t4s-gy-0 t4s-align-items-center t4s-justify-content-between" {{ block.shopify_attributes }}>
          <div class="t4s-col-auto"><strong>{{ 'cart.mini_cart.subtotal' | t }}</strong></div>
          <div data-cart-prices class="t4s-col-auto t4s-text-right">
            {%- if cart.total_discount > 0 -%}
              <div class="t4s-cart__totalPrice">
                <del class="t4s-cart__originalPrice">{{ cart.original_total_price | money }}</del>
                <ins class="t4s-cart__finalPrice">{{ cart.total_price | money }}</ins>
              </div>
            {%- elsif compare_tt_price > total_price -%}
              <div class="t4s-cart__totalPrice">
                <del class="t4s-cart__originalPrice">{{ compare_tt_price | money }}</del>
                <ins class="t4s-cart__finalPrice">{{ total_price | money }}</ins>
              </div>
            {%- else -%}
              <div class="t4s-cart__totalPrice">{{ total_price | money }}</div>
            {%- endif -%}
          </div>
        </div>

      {%- when 'tax' -%}
        {%- capture taxes_shipping_checkout -%}
          {%- assign page_url = settings.link_ship -%}
          {%- if se_stts.show_discount -%}
            {%- if cart.taxes_included and page_url != blank -%}
              {{ 'cart.general.taxes_included_discounts_and_shipping_policy_html' | t: link: page_url }}
            {%- elsif cart.taxes_included -%}
              {{ 'cart.general.taxes_included_discounts_but_shipping_at_checkout' | t }}
            {%- elsif page_url != blank -%}
              {{ 'cart.general.taxes_discounts_and_shipping_policy_at_checkout_html' | t: link: page_url }}
            {%- else -%}
              {{ 'cart.general.taxes_discounts_and_shipping_at_checkout' | t }}
            {%- endif -%}
          {%- else -%}
            {%- if cart.taxes_included and page_url != blank -%}
              {{ 'cart.general.taxes_included_and_shipping_policy_html' | t: link: page_url }}
            {%- elsif cart.taxes_included -%}
              {{ 'cart.general.taxes_included_but_shipping_at_checkout' | t }}
            {%- elsif page_url != blank -%}
              {{ 'cart.general.taxes_and_shipping_policy_at_checkout_html' | t: link: page_url }}
            {%- else -%}
              {{ 'cart.general.taxes_and_shipping_at_checkout' | t }}
            {%- endif -%}
          {%- endif -%}
        {%- endcapture -%}
        <p class="t4s-cart__tax" {{ block.shopify_attributes }}>{{ taxes_shipping_checkout }}</p>

      {%- when 'agree' -%}
        {%- if se_stts.enable_calc_ship and shipping_amount > -1 -%}
          {% render 'mini-cart-shipping-threshold' %}
        {%- endif -%}
        <div class="t4s-field" id="ShippingProvinceContainer_{{ idShip }}" style="display:none">
          <label for="ShippingProvince_{{ idShip }}" id="address_province_label">{{ 'cart.shipping_estimator.province' | t }}</label>
          <select id="ShippingProvince_{{ idShip }}" name="province" data-default="{% if customer %}{{ customer.default_address.province }}{% endif %}"></select>
        </div>  
        <div class="t4s-field">
          <label for="ShippingZip_{{ idShip }}">{{ 'cart.shipping_estimator.zip_code' | t }}</label>
          <input type="text" data-opend-focus id="ShippingZip_{{ idShip }}" name="zip" value="{% if customer %}{{ customer.default_address.zip }}{% endif %}"/>
        </div>
        <div class="t4s-field">
          <button data-action="estimate-shipping" type="button" class="t4s-get__rates t4s-mini_cart-tool__primary t4s-btn-loading__svg"> 
            <span class="t4s-btn-atc_text">{{ 'cart.shipping_estimator.estimate' | t }}</span>
            <div class="t4s-loading__spinner t4s-dn">
              <svg width="16" height="16" aria-hidden="true" focusable="false" role="presentation" class="t4s-svg__spinner" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg"><circle class="t4s-path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle></svg>
            </div>  
          </button>
        </div>
        <div class="t4s-field">
          <button type="button" data-cart-tool_close class="t4s-mini_cart-tool__back">{{ 'cart.tool.cancel' | t }}</button>
        </div>
        <div data-response-rates class="t4s-response__rates"></div>
        <template data-lang-rates class="t4s-d-none">
          {
            "multiple_rates": {{ 'cart.shipping_estimator.multiple_rates' | t | json }},
            "one_rate": {{ 'cart.shipping_estimator.one_rate' | t | json }},
            "no_rates": {{ 'cart.shipping_estimator.no_rates' | t | json }},
            "rate_value": {{ 'cart.shipping_estimator.rate_value' | t | json }},
            "errors": {{ 'cart.shipping_estimator.errors' | t | json }}
          }
        </template> 
    {%- endcase -%}
  {%- endfor -%}

  {%- for block in section_blocks -%}
    {%- if block.type == 'btnc' or block.type == 'btnck' -%}
      {%- assign bk_stts = block.settings -%}
      {%- assign button_style = bk_stts.button_style -%}
      <div class="t4s-cart__footer-btn t4s-mt-20">
        {%- if block.type == 'btnc' -%}
          <a href="{{ routes.cart_url }}" class="t4s-btn t4s-btn-base t4s-btn-style-{{ button_style }} t4s-btn-color-{{ bk_stts.btn_cl }} {% if button_style == 'default' or button_style == 'outline' %}t4s-btn-effect-{{ bk_stts.button_effect }}{% endif %} t4s-justify-content-center t4s-truncate">
            {{ 'cart.general.view_cart' | t }}
            {%- if bk_stts.btn_icon -%}<svg class="t4s-btn-icon" width="14"><use xlink:href="#t4s-icon-btn"></use></svg>{%- endif -%}
          </a>
        {%- elsif block.type == 'btnck' -%}
          <a href="{{ routes.checkout_url }}" class="t4s-btn t4s-btn-base t4s-btn-style-{{ button_style }} t4s-btn-color-{{ bk_stts.btn_cl }} {% if button_style == 'default' or button_style == 'outline' %}t4s-btn-effect-{{ bk_stts.button_effect }}{% endif %} t4s-justify-content-center t4s-truncate">
            {{ 'cart.general.checkout' | t }}
            {%- if bk_stts.btn_icon -%}<svg class="t4s-btn-icon" width="14"><use xlink:href="#t4s-icon-btn"></use></svg>{%- endif -%}
          </a>
        {%- endif -%}
      </div>
    {%- endif -%}
  {%- endfor -%}
</div>

<script>
(function() {
  let lastCartToken = null;
  let isUpdating = false;

  // Function to update cart footer
  function updateCartFooter() {
    if (isUpdating) return;
    isUpdating = true;

    fetch('/cart.js')
      .then(response => response.json())
      .then(cart => {
        // Update discount section
        const discountContainer = document.querySelector('[data-cart-discounts]');
        if (discountContainer) {
          let discountHTML = '';
          if (cart.cart_level_discount_applications && cart.cart_level_discount_applications.length > 0) {
            discountHTML = '<ul class="t4s-cart_discounts">';
            cart.cart_level_discount_applications.forEach(discount => {
              const formattedAmount = new Intl.NumberFormat('en-US', {
                style: 'currency',
                currency: window.Shopify?.currency?.active || 'USD'
              }).format(discount.total_allocated_amount / 100);
              
               discountHTML += `
                <li class="t4s-order_cart_discounts">
                  <svg viewBox="0 0 24 24" width="20"><use href="#icon-cart-tag"/></svg> 
                  <span>${discount.title}</span>
                </li>
              `; 
            });
            discountHTML += '</ul>';
          }
          discountContainer.innerHTML = discountHTML;
        }

        // Update prices
        const pricesContainer = document.querySelector('[data-cart-prices]');
        if (pricesContainer) {
          const totalPrice = cart.total_price;
          const originalPrice = cart.original_total_price;
          const hasDiscount = cart.total_discount > 0;
          
          let priceHTML = '';
          if (hasDiscount) {
            const formattedOriginal = new Intl.NumberFormat('en-US', {
              style: 'currency',
              currency: window.Shopify?.currency?.active || 'USD'
            }).format(originalPrice / 100);
            
            const formattedFinal = new Intl.NumberFormat('en-US', {
              style: 'currency',
              currency: window.Shopify?.currency?.active || 'USD'
            }).format(totalPrice / 100);
            
            priceHTML = `
              <div class="t4s-cart__totalPrice">
                <del class="t4s-cart__originalPrice">${formattedOriginal}</del>
                <ins class="t4s-cart__finalPrice">${formattedFinal}</ins>
              </div>
            `;
          } else {
            const formattedPrice = new Intl.NumberFormat('en-US', {
              style: 'currency',
              currency: window.Shopify?.currency?.active || 'USD'
            }).format(totalPrice / 100);
            
            priceHTML = `<div class="t4s-cart__totalPrice">${formattedPrice}</div>`;
          }
          pricesContainer.innerHTML = priceHTML;
        }

        lastCartToken = cart.token;
      })
      .catch(error => {
        console.log('Cart update error:', error);
      })
      .finally(() => {
        isUpdating = false;
      });
  }

  // Listen for discount code button clicks
  document.addEventListener('click', function(e) {
    if (e.target.matches('[data-action="save-discountcode"]') || 
        e.target.closest('[data-action="save-discountcode"]')) {
      setTimeout(updateCartFooter, 500);
    }
  });

  // Listen for Enter key on discount input
  document.addEventListener('keydown', function(e) {
    if (e.key === 'Enter' && e.target.matches('#CartDiscountcode')) {
      setTimeout(updateCartFooter, 500);
    }
  });

  // Listen for cart events
  document.addEventListener('cart:updated', updateCartFooter);
  document.addEventListener('cart:refresh', updateCartFooter);
  document.addEventListener('cart:change', updateCartFooter);

  // Override fetch to catch discount code requests
  const originalFetch = window.fetch;
  window.fetch = function(...args) {
    const url = args[0];
    if (typeof url === 'string' && (url.includes('/discount') || url.includes('/cart'))) {
      return originalFetch.apply(this, args).then(response => {
        if (response.ok) {
          setTimeout(updateCartFooter, 300);
        }
        return response;
      });
    }
    return originalFetch.apply(this, args);
  };

  // Polling fallback - check cart token every 2 seconds
  setInterval(function() {
    if (!isUpdating) {
      fetch('/cart.js')
        .then(response => response.json())
        .then(cart => {
          if (lastCartToken && lastCartToken !== cart.token) {
            updateCartFooter();
          } else if (!lastCartToken) {
            lastCartToken = cart.token;
          }
        })
        .catch(() => {});
    }
  }, 2000);

  // Initial setup
  updateCartFooter();
})();
</script>
